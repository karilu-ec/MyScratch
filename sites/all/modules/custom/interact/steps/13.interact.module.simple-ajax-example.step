<?php
// $Id$

/**
 * @file
 * Demonstrates how to work with JavaScript and jQuery in Drupal.
 */

/**
 * Implements hook_menu().
 */
function interact_menu() {
  $items['interact'] = array(
    'title' => 'Interact example page',
    'description' => 'Demonstration of various JavaScript utilities',
    'page callback' => 'interact_examples',
    'access callback' => TRUE,
  );
  $items['interact/ajax-callback'] = array(
    'title' => 'This is a callback function for an Ajax page',
    'description' => 'Callback function for an Ajax page.',
    'page callback' => 'interact_ajax_callback',
    'theme callback' => 'ajax_base_page_theme', // Sets base theme to be the same as current page.
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
 * Menu callback; Page to demonstrate JavaScript and jQuery examples.
 */
function interact_examples() {

  // Set the path to our script.
  $script = drupal_get_path('module', 'interact') . '/interact.js';

  // Include a JavaScript file.
  $js = drupal_add_js($script);

  // Same as above, but more explicit.
  //drupal_add_js($script, 'file');

  // Same as above, but even more explicit.
  //drupal_add_js($script, array('type' => 'file'));

  // If 'every_page' is set to TRUE, it will get aggregated into a single file.
  //drupal_add_js($script, array('every_page' => TRUE));

  // Sets the weight of a JavaScript file.
  //drupal_add_js($script, array('group' => JS_DEFAULT));

  // Sets the weight of a JavaScript file within a group.
  //drupal_add_js($script, array('group' => JS_DEFAULT, 'weight' => 10));

  // Sets the weight of a JavaScript file within a group.
  //drupal_add_js($script, array('scope' => 'footer'));

  // Add inline JavaScript.
  //drupal_add_js('alert("This is inline");', 'inline');

  // Same as above, but explicit.
  //drupal_add_js('alert("This is inline");', array('type' => 'inline'));

  // Use the jQuery object inline.
  //drupal_add_js('alert(jQuery("h1 span").text());', array('type' => 'inline'));

  // Same as above, but now we can use the jQuery object as $.
  //drupal_add_js('(function ($) { alert($("h1 span").text())})(jQuery);', array('type' => 'inline'));

  // Adding code to the footer.
  //drupal_add_js($script, array('scope' => 'footer'));

  // Save a variable to use in JavaScript code.
  //global $user;
  //drupal_add_js(array('interact' => array('username' => $user->name)), 'setting');
  //drupal_add_js('alert(Drupal.settings.interact.username);', array('type' => 'inline', 'scope' => 'footer'));

  drupal_add_library('interact', 'corner');
  drupal_add_js('jQuery(".roundme").corner();', array('type' => 'inline', 'scope' => 'footer'));

  drupal_add_js('misc/ajax.js');
  $ajax_link = '<p>' . l(t('Click me to replace content above'), 'interact/ajax-callback/nojs/', array('attributes' => array('class' => array('use-ajax')))) . '</p>';

  $build = array(
    'ajax_example' => array(
      '#type' => 'markup',
      '#markup' => '<div id="changeme">This is some text that should get changed.</div><div class="roundme" style="background:silver;padding:20px;">This is some text in a box with rounded corners.</div>' . $ajax_link,
    ),
  );

  return $build;
}


/**
 * Implements hook_library().
 */
function interact_library() {
  $libraries['corner'] = array(
    'title' => 'jQuery Corner',
    'website' => 'http://jquery.malsup.com/corner/',
    'version' => '2.11',
    'js' => array(
      drupal_get_path('module', 'interact') . '/jquery.corner.js' => array(),
    ),
  );
  return $libraries;
}


/**
 * Implements hook_library_alter().
 */
function interact_library_alter(&$libraries, $module) {
  return;
}


/**
 * An Ajax callback which will load some new text for the heading tag.
 */
function interact_ajax_callback($type = 'ajax') {
  // This is being delivered as a callback.
  if ($type == 'ajax') {
    $commands = array();
    $commands[] = ajax_command_html('#changeme', '<strong>This is some new content.</strong>');
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  }
  else {
    $output = t("This is what would be seen if JavaScript is not enabled.");
    return $output;
  }
}